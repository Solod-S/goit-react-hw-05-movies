{"version":3,"file":"static/js/812.a232c3f8.chunk.js","mappings":"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","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { SiImdb } from 'react-icons/si';\n\nexport const IMDBicon = styled(SiImdb)`\n  margin-right: ${p => p.theme.space[2]}px; ;\n`;\nexport const MoviesListWrapper = styled.div`\n  max-width: 1300px;\n\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: ${p => p.theme.space[4]}px;\n`;\nexport const MoviesLink = styled(NavLink)`\n  position: relative;\n  display: block;\n  height: 100%;\n  border-radius: ${p => p.theme.radii.normal};\n  overflow: hidden;\n  background-color: ${p => p.theme.colors.secondaryBackGroundColor};\n  color: ${p => p.theme.colors.secondaryText};\n  box-shadow: 5px 5px 5px ${p => p.theme.colors.backGroundColor};\n  transition: all 0.25s;\n  &:hover {\n    z-index: 2;\n    transform: scale(1.05);\n    box-shadow: 5px 5px 5px ${p => p.theme.colors.backGroundColor};\n  }\n`;\n\nexport const MoviesImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MoviesImageWrapper = styled.div`\n  display: block;\n  height: 350px;\n`;\n\nexport const MoviesContentWrapper = styled.div`\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const MoviesRating = styled.span`\n  display: flex;\n\n  position: absolute;\n  top: 1%;\n  right: 2%;\n  padding: ${p => p.theme.space[3]}px;\n  font-weight: 500;\n  box-shadow: 5px 5px 5px ${p => p.theme.colors.backGroundColor};\n  background-color: ${({ movieRating }) => {\n    if (movieRating > 6) {\n      return '#55ff00';\n    }\n    if (movieRating >= 4 && movieRating <= 6) {\n      return '#ffcb2f';\n    }\n    return '#f00';\n  }};\n  border-radius: ${p => p.theme.radii.normal};\n\n  color: ${p => p.theme.colors.backGroundColor};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MoviesListWrapper,\n  MoviesList,\n  MoviesLink,\n  MoviesImage,\n  MoviesImageWrapper,\n  MoviesContentWrapper,\n  MoviesRating,\n  IMDBicon,\n} from './Movies.styled';\nimport { useLocation } from 'react-router-dom';\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesListWrapper>\n      <MoviesList>\n        {movies.map(({ id, poster, title, vote_average }) => (\n          <li key={id}>\n            <MoviesLink to={`/movies/${id}`} state={{ from: location }}>\n              <MoviesImageWrapper>\n                <MoviesImage src={poster} alt={title} />\n              </MoviesImageWrapper>\n              <MoviesContentWrapper>\n                <h1>{title}</h1>\n                <MoviesRating movieRating={Math.round(vote_average)}>\n                  <IMDBicon size={22} /> {Math.round(vote_average)}\n                </MoviesRating>\n              </MoviesContentWrapper>\n            </MoviesLink>\n          </li>\n        ))}\n      </MoviesList>\n    </MoviesListWrapper>\n  );\n};\nexport default Movies;\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nexport const Title = styled.h1`\n  color: ${p => p.theme.colors.primaryText};\n  margin-bottom: ${p => p.theme.space[5]}px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\n\nimport { Title } from './HomePage.styled';\nimport { fetchTrendingMovies } from 'services/Api';\nimport { Box } from 'components/Box/Box';\nimport Movies from 'components/Movies/Movies';\n\nconst HomePage = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  useEffect(() => {\n    async function fetch() {\n      const videoResponse = await fetchTrendingMovies();\n      const allVideoData = videoResponse.data.results;\n\n      const videoData = allVideoData.map(\n        ({ id, title, poster_path: poster, vote_average }) => ({\n          id,\n          title,\n          poster: 'https://image.tmdb.org/t/p/w500' + poster,\n          vote_average,\n        })\n      );\n\n      setMoviesList(videoData);\n    }\n\n    try {\n      fetch();\n    } catch (error) {\n      console.log(error, `Попробуйте перезагрузить страницу`);\n    }\n  }, []);\n\n  return (\n    <Box p=\"30px 0\">\n      <Title>Trending Today</Title>\n      {moviesList && <Movies movies={moviesList} />}\n    </Box>\n  );\n};\n\nexport default HomePage;\n"],"names":["IMDBicon","styled","SiImdb","p","theme","space","MoviesListWrapper","MoviesList","MoviesLink","NavLink","radii","normal","colors","secondaryBackGroundColor","secondaryText","backGroundColor","MoviesImage","MoviesImageWrapper","MoviesContentWrapper","MoviesRating","movieRating","movies","location","useLocation","map","id","poster","title","vote_average","to","state","from","src","alt","Math","round","size","Title","primaryText","useState","moviesList","setMoviesList","useEffect","fetchTrendingMovies","videoResponse","allVideoData","data","results","videoData","poster_path","fetch","error","console","log","Box","Movies"],"sourceRoot":""}